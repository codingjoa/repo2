const assert = require('assert');

const { all } = require('../server/dev/sod');
describe('소득세 계산 공식 계산', () => {
  describe('200만원대', () => {
    it('2005000-1', () => {
      assert.equal(all(2005000, 1, 0), 19520);
    });
    it('2005000-2', () => {
      assert.equal(all(2005000, 2, 0), 14750);
    });
    it('2005000-3', () => {
      assert.equal(all(2005000, 3, 0), 6600);
    });
    it('2005000-4', () => {
      assert.equal(all(2005000, 4, 0), 3220);
    });
    it('2005000-5', () => {
      assert.equal(all(2005000, 5, 0), 0);
    });

    it('2015000-1', () => {
      assert.equal(all(2015000, 1, 0), 19850);
    });
    it('2015000-2', () => {
      assert.equal(all(2015000, 2, 0), 14950);
    });
    it('2015000-3', () => {
      assert.equal(all(2015000, 3, 0), 6800);
    });
    it('2015000-4', () => {
      assert.equal(all(2015000, 4, 0), 3420);
    });
    it('2015000-5', () => {
      assert.equal(all(2015000, 5, 0), 0);
    });

    it('2025000-1', () => {
      assert.equal(all(2025000, 1, 0), 20170);
    });
    it('2025000-2', () => {
      assert.equal(all(2025000, 2, 0), 15160);
    });
    it('2025000-3', () => {
      assert.equal(all(2025000, 3, 0), 6990);
    });
    it('2025000-4', () => {
      assert.equal(all(2025000, 4, 0), 3620);
    });
    it('2025000-5', () => {
      assert.equal(all(2025000, 5, 0), 0);
    });

    it('2035000', () => {
      assert.equal(all(2035000, 1, 0), 20490);
    });
    it('2045000', () => {
      assert.equal(all(2045000, 1, 0), 20810);
    });

    it('2055000-1', () => {
      assert.equal(all(2055000, 1, 0), 21130);
    });
    it('2055000-2', () => {
      assert.equal(all(2055000, 2, 0), 15780);
    });
    it('2055000-3', () => {
      assert.equal(all(2055000, 3, 0), 7590);
    });
    it('2055000-4', () => {
      assert.equal(all(2055000, 4, 0), 4210);
    });
    it('2055000-5', () => {
      assert.equal(all(2055000, 5, 0), 0);
    });

    it('2065000-1', () => {
      assert.equal(all(2065000, 1, 0), 21450);
    });
    it('2065000-2', () => {
      assert.equal(all(2065000, 2, 0), 15990);
    });
    it('2065000-3', () => {
      assert.equal(all(2065000, 3, 0), 7790);
    });
    it('2065000-4', () => {
      assert.equal(all(2065000, 4, 0), 4410);
    });
    it('2065000-5', () => {
      assert.equal(all(2065000, 5, 0), 1040);
    });
    it('2065000-6', () => {
      assert.equal(all(2065000, 6, 0), 0);
    });
  });
  describe('300만원대', () => {
    it('3010000-1', () => {
      assert.equal(all(3010000, 1, 0), 84850);
    });
    it('3010000-2', () => {
      assert.equal(all(3010000, 2, 0), 67350);
    });
    it('3010000-3', () => {
      assert.equal(all(3010000, 3, 0), 32490);
    });
    it('3010000-4', () => {
      assert.equal(all(3010000, 4, 0), 26690);
    });
    it('3010000-5', () => {
      assert.equal(all(3010000, 5, 0), 21440);
    });
    it('3010000-6', () => {
      assert.equal(all(3010000, 6, 0), 17100);
    });
    it('3010000-7', () => {
      assert.equal(all(3010000, 7, 0), 13730);
    });
    it('3010000-8', () => {
      assert.equal(all(3010000, 8, 0), 10350);
    });
    it('3010000-9', () => {
      assert.equal(all(3010000, 9, 0), 6980);
    });
    it('3010000-10', () => {
      assert.equal(all(3010000, 10, 0), 3600);
    });
    it('3010000-11', () => {
      assert.equal(all(3010000, 11, 0), 0);
    });
  });
  describe('400만원대', () => {
    it('4010000-1', () => {
      assert.equal(all(4010000, 1, 0), 210960);
    });
    it('4010000-2', () => {
      assert.equal(all(4010000, 2, 0), 182950);
    });
    it('4010000-3', () => {
      assert.equal(all(4010000, 3, 0), 124590);
    });
    it('4010000-4', () => {
      assert.equal(all(4010000, 4, 0), 105840);
    });
    it('4010000-5', () => {
      assert.equal(all(4010000, 5, 0), 89050);
    });
    it('4010000-6', () => {
      assert.equal(all(4010000, 6, 0), 75920);
    });
    it('4010000-7', () => {
      assert.equal(all(4010000, 7, 0), 62800);
    });
    it('4010000-8', () => {
      assert.equal(all(4010000, 8, 0), 49670);
    });
    it('4010000-9', () => {
      assert.equal(all(4010000, 9, 0), 36550);
    });
    it('4010000-10', () => {
      assert.equal(all(4010000, 10, 0), 28210);
    });
    it('4010000-11', () => {
      assert.equal(all(4010000, 11, 0), 23070);
    });
  });
})
